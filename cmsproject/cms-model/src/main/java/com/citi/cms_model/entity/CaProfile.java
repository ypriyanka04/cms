package com.citi.cms_model.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Lob;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

/**
 * CaProfile generated by hbm2java
 */
@Entity
@Table(name = "CA_PROFILE")
@Getter
@Setter
@NoArgsConstructor
public class CaProfile {
    private static final long serialVersionUID = -2789668855626621019L;
    @Id
    @Column(name = "CA_PROFILE_ID", unique = true, nullable = false)
    @NotNull
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int caProfileId;

    @Column(name = "CA_PROFILE_NAME", unique = false, length = 100)
    @Size(max = 100)
    private String name;

    @Column(name = "DESCRIPTION", length = 500)
    @Size(max = 500)
    private String description;

    @Column(name = "CA_TYPE", length = 100)
    @Size(max = 100)
    private String caType;

    @Column(name = "URL", length = 1000)
    @Size(max = 1000)
    private String url;

    @Column(name = "AUTH_TYPE", length = 100)
    @Size(max = 100)
    private String authType;

    @Column(name = "USER_ID", length = 50)
    @Size(max = 50)
    private String userId;

    @Column(name = "PASSWORD", length = 100)
    @Size(max = 100)
    private String password;

    @Column(name = "AUTH_CERTIFICATE")
    private int authCertificate;

    @Column(name = "CLIENT_AUTH_KEY")
    private int clientAuthKey;

    @Column(name = "STATUS", nullable = false, length = 1)
    @NotNull
    @Size(max = 1)
    private String status;

    @Column(name = "CUSTOM_FIELD_1", length = 100)
    @Size(max = 100)
    private String customField1;

    @Column(name = "CUSTOM_FIELD_2", length = 100)
    @Size(max = 100)
    private String customField2;

    @Column(name = "CUSTOM_FIELD_3", length = 100)
    @Size(max = 100)
    private String customField3;

    @Column(name = "CUSTOM_FIELD_4", length = 100)
    @Size(max = 100)
    private String customField4;

    @Column(name = "CUSTOM_FIELD_5", length = 100)
    @Size(max = 100)
    private String customField5;

    //    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "caProfile")
    //    private List<CaCertProfile> caCertprofiles = new ArrayList<>();

    @Column(name = "CUSTOM_BINARY_FIELD_1")
    @Lob
    private byte[] customBinaryField1;

    @Column(name = "CUSTOM_BINARY_FIELD_2")
    @Lob
    private byte[] customBinaryField2;

    @Column(name = "CUSTOM_BINARY_FIELD_3")
    @Lob
    private byte[] customBinaryField3;

    @Column(name = "CUSTOM_BINARY_FIELD_4")
    @Lob
    private byte[] customBinaryField4;

    @Column(name = "CUSTOM_BINARY_FIELD_5")
    @Lob
    private byte[] customBinaryField5;

}